{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\ghassen codes\\\\tomorrow\\\\ip-finder\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\n// Map.js \n\nimport React, { useEffect, useState } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { RiUserLocationFill } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '<YOUR_API_KEY>';\nconst Map = ({\n  lat,\n  lon\n}) => {\n  _s();\n  // Setting up the initial viewport of the map \n  const [viewport, setViewport] = useState({\n    latitude: lat,\n    longitude: lon,\n    zoom: 14,\n    bearing: 0,\n    pitch: 0,\n    width: '100%',\n    height: '100%'\n  });\n\n  // Viewport re-renders whenever latitude \n  // and longitude changes \n  useEffect(() => {\n    const a = {\n      ...viewport\n    };\n    a.latitude = lat;\n    a.longitude = lon;\n    setViewport(a);\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, {\n      mapboxApiAccessToken: API_KEY,\n      ...viewport,\n      onViewportChange: viewport => setViewport(viewport),\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: lat,\n        longitude: lon,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mark\",\n          children: /*#__PURE__*/_jsxDEV(RiUserLocationFill, {\n            size: \"25px\",\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n_s(Map, \"wtSxu7DqUYCrsAbfaQ7upLF4wrg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","ReactMapGL","Marker","RiUserLocationFill","jsxDEV","_jsxDEV","API_KEY","Map","lat","lon","_s","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","width","height","a","className","children","mapboxApiAccessToken","onViewportChange","mapStyle","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ghassen/Desktop/ghassen codes/tomorrow/ip-finder/src/components/Map.js"],"sourcesContent":["// Map.js \n\nimport React, { useEffect, useState } from 'react'; \nimport ReactMapGL, { Marker } from 'react-map-gl'; \nimport { RiUserLocationFill } from 'react-icons/ri'; \n\nconst API_KEY = '<YOUR_API_KEY>'; \n\nconst Map = ({ lat, lon }) => { \n\n\t// Setting up the initial viewport of the map \n\tconst [viewport, setViewport] = useState({ \n\t\tlatitude: lat, \n\t\tlongitude: lon, \n\t\tzoom: 14, \n\t\tbearing: 0, \n\t\tpitch: 0, \n\t\twidth: '100%', \n\t\theight: '100%', \n\t}); \n\n\t// Viewport re-renders whenever latitude \n\t// and longitude changes \n\tuseEffect(() => { \n\t\tconst a = { ...viewport }; \n\t\ta.latitude = lat; \n\t\ta.longitude = lon; \n\t\tsetViewport(a); \n\t}, [lat, lon]); \n\n\treturn ( \n\t\t<div className=\"map\"> \n\t\t\t<ReactMapGL \n\t\t\t\tmapboxApiAccessToken={API_KEY} \n\t\t\t\t{...viewport} \n\t\t\t\tonViewportChange={(viewport) => setViewport(viewport)} \n\t\t\t\tmapStyle=\"mapbox://styles/mapbox/streets-v11\"> \n\t\t\t\t<Marker latitude={lat} longitude={lon}> \n\t\t\t\t\t<div className=\"mark\"> \n\t\t\t\t\t\t<RiUserLocationFill size=\"25px\" color=\"blue\" /> \n\t\t\t\t\t</div> \n\t\t\t\t</Marker> \n\t\t\t</ReactMapGL> \n\t\t</div> \n\t); \n}; \n\nexport default Map;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,IAAIC,MAAM,QAAQ,cAAc;AACjD,SAASC,kBAAkB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,OAAO,GAAG,gBAAgB;AAEhC,MAAMC,GAAG,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAE7B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACxCa,QAAQ,EAAEL,GAAG;IACbM,SAAS,EAAEL,GAAG;IACdM,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACT,CAAC,CAAC;;EAEF;EACA;EACApB,SAAS,CAAC,MAAM;IACf,MAAMqB,CAAC,GAAG;MAAE,GAAGT;IAAS,CAAC;IACzBS,CAAC,CAACP,QAAQ,GAAGL,GAAG;IAChBY,CAAC,CAACN,SAAS,GAAGL,GAAG;IACjBG,WAAW,CAACQ,CAAC,CAAC;EACf,CAAC,EAAE,CAACZ,GAAG,EAAEC,GAAG,CAAC,CAAC;EAEd,oBACCJ,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACnBjB,OAAA,CAACJ,UAAU;MACVsB,oBAAoB,EAAEjB,OAAQ;MAAA,GAC1BK,QAAQ;MACZa,gBAAgB,EAAGb,QAAQ,IAAKC,WAAW,CAACD,QAAQ,CAAE;MACtDc,QAAQ,EAAC,oCAAoC;MAAAH,QAAA,eAC7CjB,OAAA,CAACH,MAAM;QAACW,QAAQ,EAAEL,GAAI;QAACM,SAAS,EAAEL,GAAI;QAAAa,QAAA,eACrCjB,OAAA;UAAKgB,SAAS,EAAC,MAAM;UAAAC,QAAA,eACpBjB,OAAA,CAACF,kBAAkB;YAACuB,IAAI,EAAC,MAAM;YAACC,KAAK,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAER,CAAC;AAACrB,EAAA,CArCIH,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}